/*
	HDProjectData.h
	The implementation of properties and methods for the HDProjectData object.
	Generated by SudzC.com
*/
#import "HDProjectData.h"

#import "HDObjectRef.h"
#import "HDObjectRef.h"
#import "HDObjectRef.h"
#import "HDProjectDataArray.h"
@implementation HDProjectData
	@synthesize _id = __id;
	@synthesize name = _name;
	@synthesize status = _status;
	@synthesize enabled = _enabled;
	@synthesize view_state = _view_state;
	@synthesize access_min = _access_min;
	@synthesize file_path = _file_path;
	@synthesize description = _description;
	@synthesize subprojects = _subprojects;
	@synthesize inherit_global = _inherit_global;

	- (id) init
	{
		if(self = [super init])
		{
			self.name = nil;
			self.status = nil; // [[HDObjectRef alloc] init];
			self.view_state = nil; // [[HDObjectRef alloc] init];
			self.access_min = nil; // [[HDObjectRef alloc] init];
			self.file_path = nil;
			self.description = nil;
			self.subprojects = nil; // [[HDProjectDataArray alloc] init];

		}
		return self;
	}

	+ (HDProjectData*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (HDProjectData*)[[[HDProjectData alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self._id = [[Soap getNodeValue: node withName: @"id"] intValue];
			self.name = [Soap getNodeValue: node withName: @"name"];
			self.status = [[HDObjectRef newWithNode: [Soap getNode: node withName: @"status"]] object];
			self.enabled = [[Soap getNodeValue: node withName: @"enabled"] boolValue];
			self.view_state = [[HDObjectRef newWithNode: [Soap getNode: node withName: @"view_state"]] object];
			self.access_min = [[HDObjectRef newWithNode: [Soap getNode: node withName: @"access_min"]] object];
			self.file_path = [Soap getNodeValue: node withName: @"file_path"];
			self.description = [Soap getNodeValue: node withName: @"description"];
			self.subprojects = [[HDProjectDataArray newWithNode: [Soap getNode: node withName: @"subprojects"]] object];
			self.inherit_global = [[Soap getNodeValue: node withName: @"inherit_global"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"ProjectData"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<id>%@</id>", [NSString stringWithFormat: @"%i", self._id]];
		if (self.name != nil) [s appendFormat: @"<name>%@</name>", [[self.name stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.status != nil) [s appendString: [self.status serialize: @"status"]];
		[s appendFormat: @"<enabled>%@</enabled>", (self.enabled)?@"true":@"false"];
		if (self.view_state != nil) [s appendString: [self.view_state serialize: @"view_state"]];
		if (self.access_min != nil) [s appendString: [self.access_min serialize: @"access_min"]];
		if (self.file_path != nil) [s appendFormat: @"<file_path>%@</file_path>", [[self.file_path stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.description != nil) [s appendFormat: @"<description>%@</description>", [[self.description stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.subprojects != nil) [s appendString: [self.subprojects serialize: @"subprojects"]];
		[s appendFormat: @"<inherit_global>%@</inherit_global>", (self.inherit_global)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[HDProjectData class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.name != nil) { [self.name release]; }
		if(self.status != nil) { [self.status release]; }
		if(self.view_state != nil) { [self.view_state release]; }
		if(self.access_min != nil) { [self.access_min release]; }
		if(self.file_path != nil) { [self.file_path release]; }
		if(self.description != nil) { [self.description release]; }
		if(self.subprojects != nil) { [self.subprojects release]; }
		[super dealloc];
	}

@end

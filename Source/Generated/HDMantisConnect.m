/*
	HDMantisConnect.m
	The implementation classes and methods for the MantisConnect web service.
	Generated by SudzC.com
*/

#import "HDMantisConnect.h"
				
#import "Soap.h"
	
#import "HDStringArray.h"
#import "HDObjectRefArray.h"
#import "HDAccountDataArray.h"
#import "HDAttachmentDataArray.h"
#import "HDProjectAttachmentDataArray.h"
#import "HDRelationshipDataArray.h"
#import "HDIssueNoteDataArray.h"
#import "HDIssueDataArray.h"
#import "HDIssueHeaderDataArray.h"
#import "HDProjectDataArray.h"
#import "HDProjectVersionDataArray.h"
#import "HDFilterDataArray.h"
#import "HDCustomFieldDefinitionDataArray.h"
#import "HDCustomFieldLinkForProjectDataArray.h"
#import "HDCustomFieldValueForIssueDataArray.h"
#import "HDTagDataArray.h"
#import "HDProfileDataArray.h"
#import "HDProjectData.h"
#import "HDIssueHeaderData.h"
#import "HDCustomFieldDefinitionData.h"
#import "HDObjectRef.h"
#import "HDCustomFieldLinkForProjectData.h"
#import "HDCustomFieldValueForIssueData.h"
#import "HDTagDataSearchResult.h"
#import "HDProfileDataSearchResult.h"
#import "HDRelationshipData.h"
#import "HDIssueData.h"
#import "HDAccountData.h"
#import "HDTagData.h"
#import "HDProfileData.h"
#import "HDAttachmentData.h"
#import "HDProjectVersionData.h"
#import "HDFilterData.h"
#import "HDProjectAttachmentData.h"
#import "HDIssueNoteData.h"

/* Implementation of the service */
				
@implementation HDMantisConnect

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php";
			self.namespace = @"http://futureware.biz/mantisconnect";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (HDMantisConnect*) service {
		return [HDMantisConnect serviceWithUsername:nil andPassword:nil];
	}
	
	+ (HDMantisConnect*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[[HDMantisConnect alloc] initWithUsername:username andPassword:password] autorelease];
	}

		
	/* Returns NSString*.  */
	- (SoapRequest*) mc_version: (id <SoapDelegate>) handler
	{
		return [self mc_version: handler action: nil];
	}

	- (SoapRequest*) mc_version: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"mc_version" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_version" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns HDObjectRefArray*. Get the enumeration for statuses. */
	- (SoapRequest*) mc_enum_status: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password
	{
		return [self mc_enum_status: handler action: nil username: username password: password];
	}

	- (SoapRequest*) mc_enum_status: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_enum_status" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_enum_status" postData: _envelope deserializeTo: [[HDObjectRefArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDObjectRefArray*. Get the enumeration for priorities. */
	- (SoapRequest*) mc_enum_priorities: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password
	{
		return [self mc_enum_priorities: handler action: nil username: username password: password];
	}

	- (SoapRequest*) mc_enum_priorities: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_enum_priorities" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_enum_priorities" postData: _envelope deserializeTo: [[HDObjectRefArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDObjectRefArray*. Get the enumeration for severities. */
	- (SoapRequest*) mc_enum_severities: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password
	{
		return [self mc_enum_severities: handler action: nil username: username password: password];
	}

	- (SoapRequest*) mc_enum_severities: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_enum_severities" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_enum_severities" postData: _envelope deserializeTo: [[HDObjectRefArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDObjectRefArray*. Get the enumeration for reproducibilities. */
	- (SoapRequest*) mc_enum_reproducibilities: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password
	{
		return [self mc_enum_reproducibilities: handler action: nil username: username password: password];
	}

	- (SoapRequest*) mc_enum_reproducibilities: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_enum_reproducibilities" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_enum_reproducibilities" postData: _envelope deserializeTo: [[HDObjectRefArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDObjectRefArray*. Get the enumeration for projections. */
	- (SoapRequest*) mc_enum_projections: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password
	{
		return [self mc_enum_projections: handler action: nil username: username password: password];
	}

	- (SoapRequest*) mc_enum_projections: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_enum_projections" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_enum_projections" postData: _envelope deserializeTo: [[HDObjectRefArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDObjectRefArray*. Get the enumeration for ETAs. */
	- (SoapRequest*) mc_enum_etas: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password
	{
		return [self mc_enum_etas: handler action: nil username: username password: password];
	}

	- (SoapRequest*) mc_enum_etas: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_enum_etas" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_enum_etas" postData: _envelope deserializeTo: [[HDObjectRefArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDObjectRefArray*. Get the enumeration for resolutions. */
	- (SoapRequest*) mc_enum_resolutions: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password
	{
		return [self mc_enum_resolutions: handler action: nil username: username password: password];
	}

	- (SoapRequest*) mc_enum_resolutions: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_enum_resolutions" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_enum_resolutions" postData: _envelope deserializeTo: [[HDObjectRefArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDObjectRefArray*. Get the enumeration for access levels. */
	- (SoapRequest*) mc_enum_access_levels: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password
	{
		return [self mc_enum_access_levels: handler action: nil username: username password: password];
	}

	- (SoapRequest*) mc_enum_access_levels: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_enum_access_levels" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_enum_access_levels" postData: _envelope deserializeTo: [[HDObjectRefArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDObjectRefArray*. Get the enumeration for project statuses. */
	- (SoapRequest*) mc_enum_project_status: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password
	{
		return [self mc_enum_project_status: handler action: nil username: username password: password];
	}

	- (SoapRequest*) mc_enum_project_status: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_enum_project_status" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_enum_project_status" postData: _envelope deserializeTo: [[HDObjectRefArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDObjectRefArray*. Get the enumeration for project view states. */
	- (SoapRequest*) mc_enum_project_view_states: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password
	{
		return [self mc_enum_project_view_states: handler action: nil username: username password: password];
	}

	- (SoapRequest*) mc_enum_project_view_states: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_enum_project_view_states" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_enum_project_view_states" postData: _envelope deserializeTo: [[HDObjectRefArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDObjectRefArray*. Get the enumeration for view states. */
	- (SoapRequest*) mc_enum_view_states: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password
	{
		return [self mc_enum_view_states: handler action: nil username: username password: password];
	}

	- (SoapRequest*) mc_enum_view_states: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_enum_view_states" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_enum_view_states" postData: _envelope deserializeTo: [[HDObjectRefArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDObjectRefArray*. Get the enumeration for custom field types. */
	- (SoapRequest*) mc_enum_custom_field_types: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password
	{
		return [self mc_enum_custom_field_types: handler action: nil username: username password: password];
	}

	- (SoapRequest*) mc_enum_custom_field_types: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_enum_custom_field_types" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_enum_custom_field_types" postData: _envelope deserializeTo: [[HDObjectRefArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*. Get the enumeration for the specified enumeration type. */
	- (SoapRequest*) mc_enum_get: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password enumeration: (NSString*) enumeration
	{
		return [self mc_enum_get: handler action: nil username: username password: password enumeration: enumeration];
	}

	- (SoapRequest*) mc_enum_get: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password enumeration: (NSString*) enumeration
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: enumeration forName: @"enumeration"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_enum_get" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_enum_get" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns BOOL. Check there exists an issue with the specified id. */
	- (SoapRequest*) mc_issue_exists: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id
	{
		return [self mc_issue_exists: handler action: nil username: username password: password issue_id: issue_id];
	}

	- (SoapRequest*) mc_issue_exists: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: issue_id] forName: @"issue_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_issue_exists" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_issue_exists" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns HDIssueData*. Get the issue with the specified id. */
	- (SoapRequest*) mc_issue_get: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id
	{
		return [self mc_issue_get: handler action: nil username: username password: password issue_id: issue_id];
	}

	- (SoapRequest*) mc_issue_get: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: issue_id] forName: @"issue_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_issue_get" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_issue_get" postData: _envelope deserializeTo: [[HDIssueData alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns int. Get the latest submitted issue in the specified project. */
	- (SoapRequest*) mc_issue_get_biggest_id: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id
	{
		return [self mc_issue_get_biggest_id: handler action: nil username: username password: password project_id: project_id];
	}

	- (SoapRequest*) mc_issue_get_biggest_id: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_issue_get_biggest_id" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_issue_get_biggest_id" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns int. Get the id of the issue with the specified summary. */
	- (SoapRequest*) mc_issue_get_id_from_summary: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password summary: (NSString*) summary
	{
		return [self mc_issue_get_id_from_summary: handler action: nil username: username password: password summary: summary];
	}

	- (SoapRequest*) mc_issue_get_id_from_summary: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password summary: (NSString*) summary
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: summary forName: @"summary"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_issue_get_id_from_summary" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_issue_get_id_from_summary" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns int. Submit the specified issue details. */
	- (SoapRequest*) mc_issue_add: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password issue: (HDIssueData*) issue
	{
		return [self mc_issue_add: handler action: nil username: username password: password issue: issue];
	}

	- (SoapRequest*) mc_issue_add: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password issue: (HDIssueData*) issue
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: issue forName: @"issue"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_issue_add" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_issue_add" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns BOOL. Update Issue method. */
	- (SoapRequest*) mc_issue_update: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password issueId: (int) issueId issue: (HDIssueData*) issue
	{
		return [self mc_issue_update: handler action: nil username: username password: password issueId: issueId issue: issue];
	}

	- (SoapRequest*) mc_issue_update: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password issueId: (int) issueId issue: (HDIssueData*) issue
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: issueId] forName: @"issueId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: issue forName: @"issue"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_issue_update" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_issue_update" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns BOOL. Sets the tags for a specified issue. */
	- (SoapRequest*) mc_issue_set_tags: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id tags: (HDTagDataArray*) tags
	{
		return [self mc_issue_set_tags: handler action: nil username: username password: password issue_id: issue_id tags: tags];
	}

	- (SoapRequest*) mc_issue_set_tags: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id tags: (HDTagDataArray*) tags
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: issue_id] forName: @"issue_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: tags forName: @"tags"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_issue_set_tags" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_issue_set_tags" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns BOOL. Delete the issue with the specified id. */
	- (SoapRequest*) mc_issue_delete: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id
	{
		return [self mc_issue_delete: handler action: nil username: username password: password issue_id: issue_id];
	}

	- (SoapRequest*) mc_issue_delete: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: issue_id] forName: @"issue_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_issue_delete" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_issue_delete" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns int. Submit a new note. */
	- (SoapRequest*) mc_issue_note_add: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id note: (HDIssueNoteData*) note
	{
		return [self mc_issue_note_add: handler action: nil username: username password: password issue_id: issue_id note: note];
	}

	- (SoapRequest*) mc_issue_note_add: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id note: (HDIssueNoteData*) note
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: issue_id] forName: @"issue_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: note forName: @"note"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_issue_note_add" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_issue_note_add" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns BOOL. Delete the note with the specified id. */
	- (SoapRequest*) mc_issue_note_delete: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password issue_note_id: (int) issue_note_id
	{
		return [self mc_issue_note_delete: handler action: nil username: username password: password issue_note_id: issue_note_id];
	}

	- (SoapRequest*) mc_issue_note_delete: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password issue_note_id: (int) issue_note_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: issue_note_id] forName: @"issue_note_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_issue_note_delete" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_issue_note_delete" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns BOOL. Update a specific note of a specific issue. */
	- (SoapRequest*) mc_issue_note_update: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password note: (HDIssueNoteData*) note
	{
		return [self mc_issue_note_update: handler action: nil username: username password: password note: note];
	}

	- (SoapRequest*) mc_issue_note_update: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password note: (HDIssueNoteData*) note
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: note forName: @"note"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_issue_note_update" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_issue_note_update" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns int. Submit a new relationship. */
	- (SoapRequest*) mc_issue_relationship_add: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id relationship: (HDRelationshipData*) relationship
	{
		return [self mc_issue_relationship_add: handler action: nil username: username password: password issue_id: issue_id relationship: relationship];
	}

	- (SoapRequest*) mc_issue_relationship_add: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id relationship: (HDRelationshipData*) relationship
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: issue_id] forName: @"issue_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: relationship forName: @"relationship"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_issue_relationship_add" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_issue_relationship_add" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns BOOL. Delete the relationship for the specified issue. */
	- (SoapRequest*) mc_issue_relationship_delete: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id relationship_id: (int) relationship_id
	{
		return [self mc_issue_relationship_delete: handler action: nil username: username password: password issue_id: issue_id relationship_id: relationship_id];
	}

	- (SoapRequest*) mc_issue_relationship_delete: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id relationship_id: (int) relationship_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: issue_id] forName: @"issue_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: relationship_id] forName: @"relationship_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_issue_relationship_delete" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_issue_relationship_delete" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns int. Submit a new issue attachment. */
	- (SoapRequest*) mc_issue_attachment_add: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id name: (NSString*) name file_type: (NSString*) file_type content: (NSData*) content
	{
		return [self mc_issue_attachment_add: handler action: nil username: username password: password issue_id: issue_id name: name file_type: file_type content: content];
	}

	- (SoapRequest*) mc_issue_attachment_add: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id name: (NSString*) name file_type: (NSString*) file_type content: (NSData*) content
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: issue_id] forName: @"issue_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: name forName: @"name"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: file_type forName: @"file_type"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: content forName: @"content"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_issue_attachment_add" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_issue_attachment_add" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns BOOL. Delete the issue attachment with the specified id. */
	- (SoapRequest*) mc_issue_attachment_delete: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password issue_attachment_id: (int) issue_attachment_id
	{
		return [self mc_issue_attachment_delete: handler action: nil username: username password: password issue_attachment_id: issue_attachment_id];
	}

	- (SoapRequest*) mc_issue_attachment_delete: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password issue_attachment_id: (int) issue_attachment_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: issue_attachment_id] forName: @"issue_attachment_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_issue_attachment_delete" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_issue_attachment_delete" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns NSData*. Get the data for the specified issue attachment. */
	- (SoapRequest*) mc_issue_attachment_get: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password issue_attachment_id: (int) issue_attachment_id
	{
		return [self mc_issue_attachment_get: handler action: nil username: username password: password issue_attachment_id: issue_attachment_id];
	}

	- (SoapRequest*) mc_issue_attachment_get: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password issue_attachment_id: (int) issue_attachment_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: issue_attachment_id] forName: @"issue_attachment_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_issue_attachment_get" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_issue_attachment_get" postData: _envelope deserializeTo: @"NSData"];
		[_request send];
		return _request;
	}

	/* Returns int. Add a new project to the tracker (must have admin privileges) */
	- (SoapRequest*) mc_project_add: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project: (HDProjectData*) project
	{
		return [self mc_project_add: handler action: nil username: username password: password project: project];
	}

	- (SoapRequest*) mc_project_add: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project: (HDProjectData*) project
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: project forName: @"project"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_add" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_add" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns BOOL. Add a new project to the tracker (must have admin privileges) */
	- (SoapRequest*) mc_project_delete: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id
	{
		return [self mc_project_delete: handler action: nil username: username password: password project_id: project_id];
	}

	- (SoapRequest*) mc_project_delete: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_delete" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_delete" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns BOOL. Update a specific project to the tracker (must have admin privileges) */
	- (SoapRequest*) mc_project_update: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id project: (HDProjectData*) project
	{
		return [self mc_project_update: handler action: nil username: username password: password project_id: project_id project: project];
	}

	- (SoapRequest*) mc_project_update: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id project: (HDProjectData*) project
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: project forName: @"project"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_update" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_update" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns int. Get the id of the project with the specified name. */
	- (SoapRequest*) mc_project_get_id_from_name: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_name: (NSString*) project_name
	{
		return [self mc_project_get_id_from_name: handler action: nil username: username password: password project_name: project_name];
	}

	- (SoapRequest*) mc_project_get_id_from_name: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_name: (NSString*) project_name
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: project_name forName: @"project_name"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_get_id_from_name" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_get_id_from_name" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns HDIssueDataArray*. Get the issues that match the specified project id and paging details. */
	- (SoapRequest*) mc_project_get_issues: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id page_number: (int) page_number per_page: (int) per_page
	{
		return [self mc_project_get_issues: handler action: nil username: username password: password project_id: project_id page_number: page_number per_page: per_page];
	}

	- (SoapRequest*) mc_project_get_issues: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id page_number: (int) page_number per_page: (int) per_page
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: page_number] forName: @"page_number"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: per_page] forName: @"per_page"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_get_issues" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_get_issues" postData: _envelope deserializeTo: [[HDIssueDataArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDIssueHeaderDataArray*. Get the issue headers that match the specified project id and paging details. */
	- (SoapRequest*) mc_project_get_issue_headers: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id page_number: (int) page_number per_page: (int) per_page
	{
		return [self mc_project_get_issue_headers: handler action: nil username: username password: password project_id: project_id page_number: page_number per_page: per_page];
	}

	- (SoapRequest*) mc_project_get_issue_headers: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id page_number: (int) page_number per_page: (int) per_page
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: page_number] forName: @"page_number"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: per_page] forName: @"per_page"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_get_issue_headers" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_get_issue_headers" postData: _envelope deserializeTo: [[HDIssueHeaderDataArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDAccountDataArray*. Get appropriate users assigned to a project by access level. */
	- (SoapRequest*) mc_project_get_users: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id access: (int) access
	{
		return [self mc_project_get_users: handler action: nil username: username password: password project_id: project_id access: access];
	}

	- (SoapRequest*) mc_project_get_users: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id access: (int) access
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: access] forName: @"access"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_get_users" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_get_users" postData: _envelope deserializeTo: [[HDAccountDataArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDProjectDataArray*. Get the list of projects that are accessible to the logged in user. */
	- (SoapRequest*) mc_projects_get_user_accessible: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password
	{
		return [self mc_projects_get_user_accessible: handler action: nil username: username password: password];
	}

	- (SoapRequest*) mc_projects_get_user_accessible: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_projects_get_user_accessible" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_projects_get_user_accessible" postData: _envelope deserializeTo: [[HDProjectDataArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDStringArray*. Get the categories belonging to the specified project. */
	- (SoapRequest*) mc_project_get_categories: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id
	{
		return [self mc_project_get_categories: handler action: nil username: username password: password project_id: project_id];
	}

	- (SoapRequest*) mc_project_get_categories: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_get_categories" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_get_categories" postData: _envelope deserializeTo: [[HDStringArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns int. Add a category of specific project. */
	- (SoapRequest*) mc_project_add_category: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id p_category_name: (NSString*) p_category_name
	{
		return [self mc_project_add_category: handler action: nil username: username password: password project_id: project_id p_category_name: p_category_name];
	}

	- (SoapRequest*) mc_project_add_category: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id p_category_name: (NSString*) p_category_name
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: p_category_name forName: @"p_category_name"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_add_category" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_add_category" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns int. Delete a category of specific project. */
	- (SoapRequest*) mc_project_delete_category: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id p_category_name: (NSString*) p_category_name
	{
		return [self mc_project_delete_category: handler action: nil username: username password: password project_id: project_id p_category_name: p_category_name];
	}

	- (SoapRequest*) mc_project_delete_category: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id p_category_name: (NSString*) p_category_name
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: p_category_name forName: @"p_category_name"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_delete_category" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_delete_category" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns int. Rename a category of specific project. */
	- (SoapRequest*) mc_project_rename_category_by_name: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id p_category_name: (NSString*) p_category_name p_category_name_new: (NSString*) p_category_name_new p_assigned_to: (int) p_assigned_to
	{
		return [self mc_project_rename_category_by_name: handler action: nil username: username password: password project_id: project_id p_category_name: p_category_name p_category_name_new: p_category_name_new p_assigned_to: p_assigned_to];
	}

	- (SoapRequest*) mc_project_rename_category_by_name: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id p_category_name: (NSString*) p_category_name p_category_name_new: (NSString*) p_category_name_new p_assigned_to: (int) p_assigned_to
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: p_category_name forName: @"p_category_name"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: p_category_name_new forName: @"p_category_name_new"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: p_assigned_to] forName: @"p_assigned_to"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_rename_category_by_name" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_rename_category_by_name" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns HDProjectVersionDataArray*. Get the versions belonging to the specified project. */
	- (SoapRequest*) mc_project_get_versions: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id
	{
		return [self mc_project_get_versions: handler action: nil username: username password: password project_id: project_id];
	}

	- (SoapRequest*) mc_project_get_versions: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_get_versions" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_get_versions" postData: _envelope deserializeTo: [[HDProjectVersionDataArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns int. Submit the specified version details. */
	- (SoapRequest*) mc_project_version_add: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password version: (HDProjectVersionData*) version
	{
		return [self mc_project_version_add: handler action: nil username: username password: password version: version];
	}

	- (SoapRequest*) mc_project_version_add: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password version: (HDProjectVersionData*) version
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: version forName: @"version"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_version_add" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_version_add" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns BOOL. Update version method. */
	- (SoapRequest*) mc_project_version_update: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password version_id: (int) version_id version: (HDProjectVersionData*) version
	{
		return [self mc_project_version_update: handler action: nil username: username password: password version_id: version_id version: version];
	}

	- (SoapRequest*) mc_project_version_update: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password version_id: (int) version_id version: (HDProjectVersionData*) version
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: version_id] forName: @"version_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: version forName: @"version"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_version_update" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_version_update" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns BOOL. Delete the version with the specified id. */
	- (SoapRequest*) mc_project_version_delete: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password version_id: (int) version_id
	{
		return [self mc_project_version_delete: handler action: nil username: username password: password version_id: version_id];
	}

	- (SoapRequest*) mc_project_version_delete: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password version_id: (int) version_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: version_id] forName: @"version_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_version_delete" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_version_delete" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns HDProjectVersionDataArray*. Get the released versions that belong to the specified project. */
	- (SoapRequest*) mc_project_get_released_versions: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id
	{
		return [self mc_project_get_released_versions: handler action: nil username: username password: password project_id: project_id];
	}

	- (SoapRequest*) mc_project_get_released_versions: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_get_released_versions" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_get_released_versions" postData: _envelope deserializeTo: [[HDProjectVersionDataArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDProjectVersionDataArray*. Get the unreleased version that belong to the specified project. */
	- (SoapRequest*) mc_project_get_unreleased_versions: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id
	{
		return [self mc_project_get_unreleased_versions: handler action: nil username: username password: password project_id: project_id];
	}

	- (SoapRequest*) mc_project_get_unreleased_versions: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_get_unreleased_versions" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_get_unreleased_versions" postData: _envelope deserializeTo: [[HDProjectVersionDataArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDProjectAttachmentDataArray*. Get the attachments that belong to the specified project. */
	- (SoapRequest*) mc_project_get_attachments: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id
	{
		return [self mc_project_get_attachments: handler action: nil username: username password: password project_id: project_id];
	}

	- (SoapRequest*) mc_project_get_attachments: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_get_attachments" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_get_attachments" postData: _envelope deserializeTo: [[HDProjectAttachmentDataArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDCustomFieldDefinitionDataArray*. Get the custom fields that belong to the specified project. */
	- (SoapRequest*) mc_project_get_custom_fields: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id
	{
		return [self mc_project_get_custom_fields: handler action: nil username: username password: password project_id: project_id];
	}

	- (SoapRequest*) mc_project_get_custom_fields: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_get_custom_fields" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_get_custom_fields" postData: _envelope deserializeTo: [[HDCustomFieldDefinitionDataArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSData*. Get the data for the specified project attachment. */
	- (SoapRequest*) mc_project_attachment_get: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_attachment_id: (int) project_attachment_id
	{
		return [self mc_project_attachment_get: handler action: nil username: username password: password project_attachment_id: project_attachment_id];
	}

	- (SoapRequest*) mc_project_attachment_get: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_attachment_id: (int) project_attachment_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_attachment_id] forName: @"project_attachment_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_attachment_get" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_attachment_get" postData: _envelope deserializeTo: @"NSData"];
		[_request send];
		return _request;
	}

	/* Returns int. Submit a new project attachment. */
	- (SoapRequest*) mc_project_attachment_add: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id name: (NSString*) name title: (NSString*) title description: (NSString*) description file_type: (NSString*) file_type content: (NSData*) content
	{
		return [self mc_project_attachment_add: handler action: nil username: username password: password project_id: project_id name: name title: title description: description file_type: file_type content: content];
	}

	- (SoapRequest*) mc_project_attachment_add: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id name: (NSString*) name title: (NSString*) title description: (NSString*) description file_type: (NSString*) file_type content: (NSData*) content
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: name forName: @"name"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: title forName: @"title"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: description forName: @"description"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: file_type forName: @"file_type"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: content forName: @"content"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_attachment_add" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_attachment_add" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns BOOL. Delete the project attachment with the specified id. */
	- (SoapRequest*) mc_project_attachment_delete: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_attachment_id: (int) project_attachment_id
	{
		return [self mc_project_attachment_delete: handler action: nil username: username password: password project_attachment_id: project_attachment_id];
	}

	- (SoapRequest*) mc_project_attachment_delete: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_attachment_id: (int) project_attachment_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_attachment_id] forName: @"project_attachment_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_attachment_delete" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_attachment_delete" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns HDStringArray*. Get the subprojects ID of a specific project. */
	- (SoapRequest*) mc_project_get_all_subprojects: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id
	{
		return [self mc_project_get_all_subprojects: handler action: nil username: username password: password project_id: project_id];
	}

	- (SoapRequest*) mc_project_get_all_subprojects: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_project_get_all_subprojects" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_project_get_all_subprojects" postData: _envelope deserializeTo: [[HDStringArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDFilterDataArray*. Get the filters defined for the specified project. */
	- (SoapRequest*) mc_filter_get: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id
	{
		return [self mc_filter_get: handler action: nil username: username password: password project_id: project_id];
	}

	- (SoapRequest*) mc_filter_get: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_filter_get" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_filter_get" postData: _envelope deserializeTo: [[HDFilterDataArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDIssueDataArray*. Get the issues that match the specified filter and paging details. */
	- (SoapRequest*) mc_filter_get_issues: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id filter_id: (int) filter_id page_number: (int) page_number per_page: (int) per_page
	{
		return [self mc_filter_get_issues: handler action: nil username: username password: password project_id: project_id filter_id: filter_id page_number: page_number per_page: per_page];
	}

	- (SoapRequest*) mc_filter_get_issues: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id filter_id: (int) filter_id page_number: (int) page_number per_page: (int) per_page
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: filter_id] forName: @"filter_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: page_number] forName: @"page_number"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: per_page] forName: @"per_page"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_filter_get_issues" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_filter_get_issues" postData: _envelope deserializeTo: [[HDIssueDataArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDIssueHeaderDataArray*. Get the issue headers that match the specified filter and paging details. */
	- (SoapRequest*) mc_filter_get_issue_headers: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id filter_id: (int) filter_id page_number: (int) page_number per_page: (int) per_page
	{
		return [self mc_filter_get_issue_headers: handler action: nil username: username password: password project_id: project_id filter_id: filter_id page_number: page_number per_page: per_page];
	}

	- (SoapRequest*) mc_filter_get_issue_headers: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id filter_id: (int) filter_id page_number: (int) page_number per_page: (int) per_page
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: filter_id] forName: @"filter_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: page_number] forName: @"page_number"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: per_page] forName: @"per_page"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_filter_get_issue_headers" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_filter_get_issue_headers" postData: _envelope deserializeTo: [[HDIssueHeaderDataArray alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns NSString*. Get the value for the specified configuration variable. */
	- (SoapRequest*) mc_config_get_string: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password config_var: (NSString*) config_var
	{
		return [self mc_config_get_string: handler action: nil username: username password: password config_var: config_var];
	}

	- (SoapRequest*) mc_config_get_string: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password config_var: (NSString*) config_var
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: config_var forName: @"config_var"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_config_get_string" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_config_get_string" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns BOOL. Notifies MantisBT of a check-in for the issue with the specified id. */
	- (SoapRequest*) mc_issue_checkin: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id comment: (NSString*) comment fixed: (BOOL) fixed
	{
		return [self mc_issue_checkin: handler action: nil username: username password: password issue_id: issue_id comment: comment fixed: fixed];
	}

	- (SoapRequest*) mc_issue_checkin: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password issue_id: (int) issue_id comment: (NSString*) comment fixed: (BOOL) fixed
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: issue_id] forName: @"issue_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: comment forName: @"comment"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: fixed] forName: @"fixed"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_issue_checkin" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_issue_checkin" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}

	/* Returns NSString*. Get the value for the specified user preference. */
	- (SoapRequest*) mc_user_pref_get_pref: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password project_id: (int) project_id pref_name: (NSString*) pref_name
	{
		return [self mc_user_pref_get_pref: handler action: nil username: username password: password project_id: project_id pref_name: pref_name];
	}

	- (SoapRequest*) mc_user_pref_get_pref: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password project_id: (int) project_id pref_name: (NSString*) pref_name
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: project_id] forName: @"project_id"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: pref_name forName: @"pref_name"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_user_pref_get_pref" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_user_pref_get_pref" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns HDProfileDataSearchResult*. Get profiles available to the current user. */
	- (SoapRequest*) mc_user_profiles_get_all: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password page_number: (int) page_number per_page: (int) per_page
	{
		return [self mc_user_profiles_get_all: handler action: nil username: username password: password page_number: page_number per_page: per_page];
	}

	- (SoapRequest*) mc_user_profiles_get_all: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password page_number: (int) page_number per_page: (int) per_page
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: page_number] forName: @"page_number"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: per_page] forName: @"per_page"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_user_profiles_get_all" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_user_profiles_get_all" postData: _envelope deserializeTo: [[HDProfileDataSearchResult alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns HDTagDataSearchResult*. Gets all the tags. */
	- (SoapRequest*) mc_tag_get_all: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password page_number: (int) page_number per_page: (int) per_page
	{
		return [self mc_tag_get_all: handler action: nil username: username password: password page_number: page_number per_page: per_page];
	}

	- (SoapRequest*) mc_tag_get_all: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password page_number: (int) page_number per_page: (int) per_page
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: page_number] forName: @"page_number"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: per_page] forName: @"per_page"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_tag_get_all" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_tag_get_all" postData: _envelope deserializeTo: [[HDTagDataSearchResult alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns int. Creates a tag. */
	- (SoapRequest*) mc_tag_add: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password tag: (HDTagData*) tag
	{
		return [self mc_tag_add: handler action: nil username: username password: password tag: tag];
	}

	- (SoapRequest*) mc_tag_add: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password tag: (HDTagData*) tag
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: tag forName: @"tag"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_tag_add" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_tag_add" postData: _envelope deserializeTo: @"int"];
		[_request send];
		return _request;
	}

	/* Returns BOOL. Deletes a tag. */
	- (SoapRequest*) mc_tag_delete: (id <SoapDelegate>) handler username: (NSString*) username password: (NSString*) password tag_id: (int) tag_id
	{
		return [self mc_tag_delete: handler action: nil username: username password: password tag_id: tag_id];
	}

	- (SoapRequest*) mc_tag_delete: (id) _target action: (SEL) _action username: (NSString*) username password: (NSString*) password tag_id: (int) tag_id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: username forName: @"username"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: password forName: @"password"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: tag_id] forName: @"tag_id"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"mc_tag_delete" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://www.mantisbt.org/demo/api/soap/mantisconnect.php/mc_tag_delete" postData: _envelope deserializeTo: @"BOOL"];
		[_request send];
		return _request;
	}


@end
	
/*
	HDAttachmentData.h
	The implementation of properties and methods for the HDAttachmentData object.
	Generated by SudzC.com
*/
#import "HDAttachmentData.h"

@implementation HDAttachmentData
	@synthesize _id = __id;
	@synthesize filename = _filename;
	@synthesize size = _size;
	@synthesize content_type = _content_type;
	@synthesize date_submitted = _date_submitted;
	@synthesize download_url = _download_url;
	@synthesize user_id = _user_id;

	- (id) init
	{
		if(self = [super init])
		{
			self.filename = nil;
			self.content_type = nil;
			self.date_submitted = nil;

		}
		return self;
	}

	+ (HDAttachmentData*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (HDAttachmentData*)[[[HDAttachmentData alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self._id = [[Soap getNodeValue: node withName: @"id"] intValue];
			self.filename = [Soap getNodeValue: node withName: @"filename"];
			self.size = [[Soap getNodeValue: node withName: @"size"] intValue];
			self.content_type = [Soap getNodeValue: node withName: @"content_type"];
			self.date_submitted = [Soap dateFromString: [Soap getNodeValue: node withName: @"date_submitted"]];
			self.download_url = [Soap deserialize: [Soap getNode: node withName: @"download_url"]];
			self.user_id = [[Soap getNodeValue: node withName: @"user_id"] intValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"AttachmentData"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<id>%@</id>", [NSString stringWithFormat: @"%i", self._id]];
		if (self.filename != nil) [s appendFormat: @"<filename>%@</filename>", [[self.filename stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<size>%@</size>", [NSString stringWithFormat: @"%i", self.size]];
		if (self.content_type != nil) [s appendFormat: @"<content_type>%@</content_type>", [[self.content_type stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.date_submitted != nil) [s appendFormat: @"<date_submitted>%@</date_submitted>", [Soap getDateString: self.date_submitted]];
		if (self.download_url != nil) [s appendString: [Soap serialize: self.download_url]];
		[s appendFormat: @"<user_id>%@</user_id>", [NSString stringWithFormat: @"%i", self.user_id]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[HDAttachmentData class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.filename != nil) { [self.filename release]; }
		if(self.content_type != nil) { [self.content_type release]; }
		if(self.date_submitted != nil) { [self.date_submitted release]; }
		if(self.download_url != nil) { [self.download_url release]; }
		[super dealloc];
	}

@end

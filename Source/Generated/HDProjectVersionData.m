/*
	HDProjectVersionData.h
	The implementation of properties and methods for the HDProjectVersionData object.
	Generated by SudzC.com
*/
#import "HDProjectVersionData.h"

@implementation HDProjectVersionData
	@synthesize _id = __id;
	@synthesize name = _name;
	@synthesize project_id = _project_id;
	@synthesize date_order = _date_order;
	@synthesize description = _description;
	@synthesize released = _released;
	@synthesize obsolete = _obsolete;

	- (id) init
	{
		if(self = [super init])
		{
			self.name = nil;
			self.date_order = nil;
			self.description = nil;

		}
		return self;
	}

	+ (HDProjectVersionData*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (HDProjectVersionData*)[[[HDProjectVersionData alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self._id = [[Soap getNodeValue: node withName: @"id"] intValue];
			self.name = [Soap getNodeValue: node withName: @"name"];
			self.project_id = [[Soap getNodeValue: node withName: @"project_id"] intValue];
			self.date_order = [Soap dateFromString: [Soap getNodeValue: node withName: @"date_order"]];
			self.description = [Soap getNodeValue: node withName: @"description"];
			self.released = [[Soap getNodeValue: node withName: @"released"] boolValue];
			self.obsolete = [[Soap getNodeValue: node withName: @"obsolete"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"ProjectVersionData"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<id>%@</id>", [NSString stringWithFormat: @"%i", self._id]];
		if (self.name != nil) [s appendFormat: @"<name>%@</name>", [[self.name stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<project_id>%@</project_id>", [NSString stringWithFormat: @"%i", self.project_id]];
		if (self.date_order != nil) [s appendFormat: @"<date_order>%@</date_order>", [Soap getDateString: self.date_order]];
		if (self.description != nil) [s appendFormat: @"<description>%@</description>", [[self.description stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<released>%@</released>", (self.released)?@"true":@"false"];
		[s appendFormat: @"<obsolete>%@</obsolete>", (self.obsolete)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[HDProjectVersionData class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.name != nil) { [self.name release]; }
		if(self.date_order != nil) { [self.date_order release]; }
		if(self.description != nil) { [self.description release]; }
		[super dealloc];
	}

@end
